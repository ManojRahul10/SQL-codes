Constrains: used to limit the type of data that can go into a table.


1. Not Null
2. Unique
3. Primary key
4. Foreign key
5. Check
6. Default

Here foreign key is child and primary key in parent or reference
------------------------------------------------------------------------------------------------
# Primary Key vs Foreign Key in SQL

**Primary Key:**
- Uniquely identifies each record in a table
- Cannot contain NULL values
- Must be unique for each record
- Only one primary key per table (though it can consist of multiple columns)
- Creates a clustered index by default (in many database systems)
- Example: `customer_id` in a Customers table


**Foreign Key:**
- References a primary key in another table
- Creates a relationship between two tables
- Can contain NULL values (unless constrained otherwise)
- Can have multiple foreign keys in a table
- Used to maintain referential integrity
- Example: `customer_id` in an Orders table referencing the Customers table


**Key Differences:**
- Primary keys identify records within their own table, while foreign keys reference records in other tables
- Primary keys enforce uniqueness, foreign keys enforce relationships
- A table must have a primary key, but foreign keys are optional
- Foreign keys can reference their own table (self-referencing)



----------------------------------------------------------------------------------

create database constrains;
use constrains;

create table dept(
deptid int primary key,
deptname varchar(30));

create table emp(
empid int primary key,
name varchar(20),
deptid int,
foreign key(deptid) references dept(deptid));

